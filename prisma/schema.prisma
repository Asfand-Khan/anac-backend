generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Customer {
  id             Int     @id @default(autoincrement())
  customer_code  String
  customer_name  String
  contact_no     String
  address        String
  contact_person String?

  units   Unit[]
  Machine Machine[]
}

model Unit {
  id                  Int     @id @default(autoincrement())
  unit_code           String
  unit_name           String
  unit_contact        String
  unit_address        String?
  unit_contact_person String?

  customer_id Int

  customer Customer  @relation(fields: [customer_id], references: [id])
  machines Machine[]
}

model Machine {
  id                 Int     @id @default(autoincrement())
  machine_kind       String
  machine_make       String
  machine_type       String
  other_machine_make String?
  other_machine_type String?
  machine_info1      String?
  machine_info2      String?
  machine_id         String?

  unit_id     Int
  customer_id Int

  unit     Unit     @relation(fields: [unit_id], references: [id])
  customer Customer @relation(fields: [customer_id], references: [id])
  parts    Part[]
  Sample   Sample[]
}

model Part {
  id               Int     @id @default(autoincrement())
  analysis_type    String
  part_kind        String
  part_make        String
  part_type        String
  bi_carbunation   Boolean @default(false)
  other_part_make  String?
  other_part_type  String?
  part_info        String?
  part_id          String?
  capacity_in_ltrs Float?

  machine_id Int
  machine    Machine  @relation(fields: [machine_id], references: [id])
  Sample     Sample[]
}

model Sample {
  id                  Int     @id @default(autoincrement())
  barcode_no          String
  sample_date         String
  intermediate_sample Boolean
  total_mileage       Int
  mileage_unit        String
  fluid_time          String
  top_up              Int
  top_up_unit         String
  fluid_name          String
  fluid_make          String?
  fluid_type          String?
  fluid_grade         String?

  part_id Int
  part    Part @relation(fields: [part_id], references: [id])

  machine_id Int
  machine    Machine @relation(fields: [machine_id], references: [id])
}

model SampleResult {
  id           Int     @id @default(autoincrement())
  label        String  @db.VarChar(100)
  fe           String? @db.VarChar(100)
  pb           String? @db.VarChar(100)
  cu           String? @db.VarChar(100)
  sn           String? @db.VarChar(100)
  cr           String? @db.VarChar(100)
  al           String? @db.VarChar(100)
  ni           String? @db.VarChar(100)
  si           String? @db.VarChar(100)
  h2o          String? @db.VarChar(100)
  flash        String? @db.VarChar(100)
  soot_percent String? @db.VarChar(100)
  b            String? @db.VarChar(100)
  na           String? @db.VarChar(100)
  v            String? @db.VarChar(100)
  li           String? @db.VarChar(100)
  ca           String? @db.VarChar(100)
  ba           String? @db.VarChar(100)
  zn           String? @db.VarChar(100)
  p            String? @db.VarChar(100)
  mg           String? @db.VarChar(100)
  mo           String? @db.VarChar(100)
  k            String? @db.VarChar(100)
  tbn          String? @db.VarChar(100)
  tan          String? @db.VarChar(100)
  v40          String? @db.VarChar(100)
  v100         String? @db.VarChar(100)
  paco_iso     String? @db.VarChar(100)
  paco_nas     String? @db.VarChar(100)
  oxp          String? @db.VarChar(100)
  nip          String? @db.VarChar(100)
  iph          String? @db.VarChar(100)
  appearence   String? @db.VarChar(100)
  acid_index   String? @db.VarChar(100)
  ag           String? @db.VarChar(100)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

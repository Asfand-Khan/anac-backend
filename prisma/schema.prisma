generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int     @id @default(autoincrement())
  fullname       String
  email          String  @unique
  username       String  @unique
  hashedPassword String  @db.LongText
  phone          String
  image          String?

  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt
  
  UserMenuRight UserMenuRight[]
}

model Menu {
  id       Int     @id @default(autoincrement())
  name     String?
  parentId BigInt?
  url      String?
  icon     String?
  sorting  Int?

  created_at    DateTime        @default(now())
  updated_at    DateTime        @updatedAt

  UserMenuRight UserMenuRight[]
}

model UserMenuRight {
  id        Int     @id @default(autoincrement())
  userId    Int
  menuId    Int
  canView   Boolean @default(true)
  canCreate Boolean @default(false)
  canEdit   Boolean @default(false)
  canDelete Boolean @default(false)

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  menu Menu @relation(fields: [menuId], references: [id])

  @@unique([userId, menuId])
}

model Company {
  id   Int    @id @default(autoincrement())
  name String @unique

  cars      Car[]
  carModels CarModel[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Car {
  id                     Int                       @id @default(autoincrement())
  companyId              Int
  carModelId             Int
  buildYear              Int
  tone                   String
  mileageTravelled       Float
  fuelType               String
  transmission           String
  price                  Decimal
  complianceYear         Int
  seats                  Int
  keys                   Int
  exteriorColor          String
  driveTrain             String
  engineSize             Float
  enginePower            Float
  vin                    String                    @unique
  bodyType               String
  odometer               Float
  fuelTankCapacity       Float
  fuelConsumption        Float
  emissions              Float
  ancapSafetyRating      Int
  cylinders              Int
  gearbox                String
  towingCapacityBraked   Int
  weight                 Int
  length                 Int
  doors                  Int                       @default(4)
  images                 CarImage[]
  popularFeatures        CarPopularFeature[]
  installedOptions       CarInstalledOption[]
  aftermarketAccessories CarAftermarketAccessory[]
  standardFeatures       CarStandardFeature[]
  serviceHistory         ServiceHistory[]
  company                Company                   @relation(fields: [companyId], references: [id])
  carModel               CarModel                  @relation(fields: [carModelId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model CarModel {
  id        Int     @id @default(autoincrement())
  companyId Int
  modelName String
  company   Company @relation(fields: [companyId], references: [id])
  cars      Car[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model CarImage {
  id    Int    @id @default(autoincrement())
  image String
  carId Int
  car   Car    @relation(fields: [carId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model PopularFeature {
  id    Int                 @id @default(autoincrement())
  image String
  label String
  cars  CarPopularFeature[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model CarPopularFeature {
  id               Int            @id @default(autoincrement())
  popularFeatureId Int
  carId            Int
  car              Car            @relation(fields: [carId], references: [id])
  popularFeature   PopularFeature @relation(fields: [popularFeatureId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model InstalledOption {
  id    Int                  @id @default(autoincrement())
  label String
  cars  CarInstalledOption[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model CarInstalledOption {
  id                Int             @id @default(autoincrement())
  installedOptionId Int
  carId             Int
  car               Car             @relation(fields: [carId], references: [id])
  installedOption   InstalledOption @relation(fields: [installedOptionId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model AftermarketAccessory {
  id    Int                       @id @default(autoincrement())
  label String
  cars  CarAftermarketAccessory[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model CarAftermarketAccessory {
  id                     Int                  @id @default(autoincrement())
  aftermarketAccessoryId Int
  carId                  Int
  car                    Car                  @relation(fields: [carId], references: [id])
  aftermarketAccessory   AftermarketAccessory @relation(fields: [aftermarketAccessoryId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model StandardFeature {
  id    Int                  @id @default(autoincrement())
  label String
  cars  CarStandardFeature[]

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model CarStandardFeature {
  id                Int             @id @default(autoincrement())
  standardFeatureId Int
  carId             Int
  car               Car             @relation(fields: [carId], references: [id])
  standardFeature   StandardFeature @relation(fields: [standardFeatureId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model ServiceHistory {
  id               Int      @id @default(autoincrement())
  date             DateTime
  mileageTravelled Float
  carId            Int
  car              Car      @relation(fields: [carId], references: [id])

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
